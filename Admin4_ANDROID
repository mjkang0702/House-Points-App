#FRAME
Modifier
  .width(393.dp)
  .height(1317.dp)
  .background(color = Color(0xFFFFFFFF), shape = RoundedCornerShape(size = 55.dp))

#TEXT
Modifier
  .width(280.dp)
  .height(81.dp)

Text(
  text = "Requests",
  style = TextStyle(
    fontSize = 36.sp,
    fontFamily = FontFamily(Font(R.font.poppins)),
    fontWeight = FontWeight(600),
    color = Color(0xFF000000),
    textAlign = TextAlign.Center,
  )
)

#REQUESTS
<Notification
    icon={<IconInbox size="20" />}
    isDismissible
    variant="message"
>
    <TextStrong>
        Musical Chairs
    </TextStrong>
    <Text>
        Student name: Bob Lee Grade: 11
        House: Canonicus Points: 100 Granted
        by: Mr. Deej
    </Text>
    <Button
        onPress={() => {}}
        variant="primary"
        size="small"
    >
        Accept
    </Button>
</Notification>

Modifier
  .border(width = Variables.StrokeBorder, color = Variables.BorderDefaultSecondary, shape = RoundedCornerShape(size = Variables.Radius200)))
  .width(331.dp)
  .height(216.dp)
  .background(color = Variables.BackgroundDefaultDefault, shape = RoundedCornerShape(size = Variables.Radius200))
  .padding(start = Variables.Space400, top = Variables.Space400, end = Variables.Space400, bottom = Variables.Space400)

object Variables {
  val BackgroundDefaultDefault: Color = Color(0xFFFFFFFF)
  val Radius200: Dp = 8.dp
  val BorderDefaultSecondary: Color = Color(0xFF757575)
  val StrokeBorder: Dp = 1.dp
  val Space400: Dp = 16.dp.dp
  val Space300: Dp = 12.dp
}

Row(
  horizontalArrangement = Arrangement.spacedBy(Variables.Space300, Alignment.Start),
  verticalAlignment = Alignment.CenterVertically,
) {
  // Child views.
}

#BOTTOM_GRADIENT
Modifier
  .width(393.dp)
  .height(491.dp)
